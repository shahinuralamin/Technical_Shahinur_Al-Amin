#!/data/data/com.termux/files/usr/bin/bash -e

function unsupported_arch() {
    print_prefix_banner
    printf "${red}"
    echo "[*] Unsupported Architecture"
    printf "${reset}"
    echo "You have successfully logged out."
    exit
}

function ask() {
    # http://djm.me/ask
    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question
        printf "${light_cyan}\n[?] "
        read -p "$1 [$prompt] " REPLY

        # Default?
        if [ -z "$REPLY" ]; then
            REPLY=$default
        fi

        printf "${reset}"

        # Check if the reply is valid
        case "$REPLY" in
            Y*|y*) return 0 ;;
            N*|n*) prefix || :
                   return 1 ;;
        esac
    done
}

function get_version() {
    printf "${blue}[*] Checking device android version...${reset}\n\n"
    case "$(getprop ro.build.version.release)" in
        4*|5*|6*)
            printf "${yellow}Android 4/5/6 isn't supported${reset}\n\n"
            exit
            ;;
        *)
            printf "${yellow}Your device's Android version is $(getprop ro.build.version.release)${reset}\n\n"
            if [ -e $HOME/storage ]; then
                echo "  Storage is OK"
            else
                printf "Configuring termux setup storage...\n"
                termux-setup-storage
            fi
            ;;
    esac
}

function check_dependencies() {
    printf "${blue}\n[*] Checking package dependencies...${reset}\n"
    ## Workaround for termux-app issue #1283 (https://github.com/termux/termux-app/issues/1283)
    ##apt update -y &> /dev/null
    apt-get update -y &> /dev/null || apt-get -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confnew" dist-upgrade -y &> /dev/null
    for i in unzip axel play-audio; do
        if [ -e $PREFIX/bin/$i ]; then
            echo "  $i is OK"
        else
            printf "Installing ${i}...\n"
            apt install -y $i || {
                printf "${red}ERROR: Failed to install packages.\n Exiting.\n${reset}"
	        exit
            }
        fi
    done
    apt upgrade -y
}

function bootstrap_dir() {
  if ask "Do you want continue with welcome voice" "Y"; then
     printf "${yellow}Continuing Anyway${reset}\n\n"
     check_dependencies
    if [ -d /sdcard/Termux-Bootstrap ]; then
        printf "${yellow}Termux-Bootstrap directory found${reset}\n\n"
    else
        printf "${yellow}Termux-Bootstrap directory created${reset}\n\n"
        mkdir /sdcard/Termux-Bootstrap
    fi
    if [ -f /sdcard/Termux-Bootstrap/welcome.mp3 ];then
        printf "${green}Welcome to Tecnical Shahinur_Al-Amin${reset}\n\n"
        play-audio /sdcard/Termux-Bootstrap/welcome.mp3
    else
        axel --output=/sdcard/Termux-Bootstrap/welcome.mp3 https://github.com/shahinuralamin/Technical_Shahinur_Al-Amin/releases/download/termux-prefix-switcher/welcome.mp3 &> /dev/null || {
             printf "${red}E: Internet connection error ${reset}\n"
             return 0
        }
        printf "${green}Welcome to Tecnical Shahinur_Al-Amin${reset}\n\n"
        play-audio /sdcard/Termux-Bootstrap/welcome.mp3
    fi
  fi
}


function print-help() {
    HEIGHT=21
    WIDTH=39
    CHOICE_HEIGHT=4
    BACKTITLE="Termux Prefix Switcher (version 1.3)"
    TITLE="Help"
    MENU="Allows to switch 32-bit termux environment on 64-bit devices Options: help - show this help switch - Switches to 32-bit Mode revert - Reverts to 64-bit Mode (This Uninstalls 32-bit prefix) NOTE: Switching to 32-bit will not install packages automatically so you have to install them again if possible."


    OPTIONS=(1 "[Home]"
             2 "Switch"
             3 "Revert")

    CHOICE=$(dialog --clear \
                    --backtitle "$BACKTITLE" \
                    --title "$TITLE" \
                    --menu "$MENU" \
                    $HEIGHT $WIDTH $CHOICE_HEIGHT \
                    "${OPTIONS[@]}" \
                    2>&1 >/dev/tty)

    clear
    case $CHOICE in
            1)
                echo "You chose Termux Prefix Switcher"
                prefix
                ;;
            2)
                print_banner || :
                echo "You chose 32-bit bootstrap installer"
                switch
                ;;
            3)
                print_banner || :
                echo "You chose 64-bit Restore Backup"
                revert
                ;;
    esac
    exit
}

function switch() {
    case "$(uname -m)" in
        armeabi|armv8l|armeabi-v7a|armv7l|i*86)
            HEIGHT=15
            WIDTH=40
            CHOICE_HEIGHT=4
            BACKTITLE="Tecnical Shahinur_Al-Amin"
            TITLE="Termux Prefix Switcher (version 1.3)"
            MENU="Cannot Switch Environment: Your device is running in 32-bit"


            OPTIONS=(1 "[Home]")

            CHOICE=$(dialog --clear \
                            --backtitle "$BACKTITLE" \
                            --title "$TITLE" \
                            --menu "$MENU" \
                            $HEIGHT $WIDTH $CHOICE_HEIGHT \
                            "${OPTIONS[@]}" \
                            2>&1 >/dev/tty)

            clear
            case $CHOICE in
                1)
                echo "You chose Termux Prefix Switcher"
                prefix
                ;;
            esac
            exit
            ;;
    esac
    if [ -d /sdcard/Termux-Bootstrap ]; then
        printf "${yellow}Termux-Bootstrap directory found${reset}\n\n"
    else
        printf "${yellow}Termux-Bootstrap directory created${reset}\n\n"
        mkdir /sdcard/Termux-Bootstrap
    fi
    printf "${yellow}some warning message${reset}\n\n"
    printf "${green}"
    echo "WARNING: You are about to enter the world of 32-bit, here's what you will expect when entering to 32-bit"
    echo "* Inconsistency will occur when running 64-bit on 32-bit environment, in some cases with the preloaded termux-exec library, you can usually unset it"
    echo "* When Running Chromium in 32-bit proot'ed linux environment, expect segmentation failures (even with --no-sandbox) option,"
    echo "* This Script will not track what packages you've installed, so you will need to reinstall them again if possible"
    echo "The Installation will begin in 5 seconds, please save all your work to avoid data loss"
    printf "${reset}"
    if ask "Do you want to switch to 32-bit? All data in this environment will be lost" "N";then
        printf "${yellow}[!]Switching to 32-bit installation... Continuing Anyway!${reset}\n\n"
        check_dependencies
        sleep 5.5
        case "$(uname -m)" in
            aarch64|arm64-v8a|arm64-v8|arm64)
                unset KEEP_ARM
                if [ -f /sdcard/Termux-Bootstrap/bootstrap-arm.zip ]; then
                    printf "${yellow}[!] Using existing arm bootstrap archive${reset}\n"
                    KEEP_ARM=1
                fi
                if [ -z $KEEP_ARM ]; then
                    printf "${blue}[*] Downloading arm 32-bit termux bootstrap...${reset}\n"
                    axel --output=/sdcard/Termux-Bootstrap/bootstrap-arm.zip https://github.com/hop-prog/Termux-Bootstrap/raw/main/arm/bootstrap-arm.zip 2> /dev/null || :
                fi
                if [ -f /sdcard/Termux-Bootstrap/bootstrap-arm.zip ]; then
                    # Unpack and remove existing installation
                    sleep 3
	            chmod 755 usr -R ||:
	            rm -rf $PREFIX/../usr32-staging
	            printf "\n${blue}[*] Extracting arm bootstrap... ${reset}\n\n"
                    unzip -d $PREFIX/../usr32-staging /sdcard/Termux-Bootstrap/bootstrap-arm.zip 2> /dev/null || :
                    scnd_stg
                fi
                ;;
            x86_64|amd64)
                unset KEEP_ARM
                if [ -f /sdcard/Termux-Bootstrap/bootstrap-i686.zip ]; then
                    printf "${yellow}[!] Using existing i686 bootstrap archive${reset}\n"
                    KEEP_ARM=1
                fi
                if [ -z $KEEP_ARM ]; then
                    printf "${blue}[*] Downloading i686 32-bit termux bootstrap...${reset}\n"
                    axel --output=/sdcard/Termux-Bootstrap/bootstrap-i686.zip https://github.com/hop-prog/Termux-Bootstrap/raw/main/arm/bootstrap-i686.zip 2> /dev/null || :
                fi
                if [ -f /sdcard/Termux-Bootstrap/bootstrap-i686.zip ]; then
                    # Unpack and remove existing installation
                    sleep 3
                    chmod 755 usr -R ||:
                    rm -rf $PREFIX/../usr32-staging
                    printf "\n${blue}[*] Extracting arm bootstrap... ${reset}\n\n"
                    unzip -d $PREFIX/../usr32-staging /sdcard/Termux-Bootstrap/bootstrap-i686.zip 2> /dev/null || :
                    scnd_stg
                fi
                ;;
            *)
                unsupported_arch
                ;;
        esac
    fi
}
function scnd_stg() {
     # Process Symlinks
     echo "[*] Processing Symlinks"
     cd $PREFIX/../usr32-staging
     while read s; do
             ln -s ${s/←/ }
     done <SYMLINKS.txt
     rm SYMLINKS.txt

     # Create Second Stage Script
     echo "[*] Doing Second Stage Setup"
     cat > $PREFIX/../secondstage-setup.sh <<- EOM
     #!/system/bin/sh
     echo "[*] Creating Backup"
     mv usr usr64-backup
     echo "[*] Switching"
     mv usr32-staging usr
     rm secondstage-setup.sh
     echo "[✓] Done, Please Close and Reopen the app"
     sleep 2
     kill -KILL $PPID
EOM
     chmod 755 $PREFIX/../secondstage-setup.sh
     cd $PREFIX/..

     # Kill Current Process and Do Second Stage Setup
     exec /system/bin/env -i ./secondstage-setup.sh
}

function revert() {
    case "$(uname -m)" in
        arm64-v8a|arm64-v8|aarch64|arm64|x86_64|amd64)
            HEIGHT=15
            WIDTH=40
            CHOICE_HEIGHT=4
            BACKTITLE="Tecnical Shahinur_Al-Amin"
            TITLE="Termux Prefix Switcher (version 1.3)"
            MENU="This option is used to switching back to 64-bit, you're already 64-bit"


            OPTIONS=(1 "[Home]")

            CHOICE=$(dialog --clear \
                            --backtitle "$BACKTITLE" \
                            --title "$TITLE" \
                            --menu "$MENU" \
                            $HEIGHT $WIDTH $CHOICE_HEIGHT \
                            "${OPTIONS[@]}" \
                            2>&1 >/dev/tty)

            clear
            case $CHOICE in
                1)
                echo "You chose Termux Prefix Switcher"
                prefix
                ;;
            esac
            exit
            ;;
        armeabi|armv8l|armeabi-v7a|armv7l|i*86)
            # Ask for Confirmation
            if ask "Do you want to switch back to 64-bit? All data in this environment will be lost" "N"; then
               printf "${yellow}[#] Switch back to 64-bit mode${reset}\n\n"
               cd $PREFIX/..
               # Check if Backup File Exists
	       if [ ! -e usr64-backup ]; then
                        echo "[!] The Backup Directory isn't exists.. Continuing Anyway!"
	       fi

               # Revert Back to 64-bit
               echo "[*] Purging 32-bit environment"
	       cat > purge-prefix.sh <<- EOM
	       #!/system/bin/sh
	       chmod 755 usr -R ||:
	       rm -rf usr

	       # Restore Backup directory if possible"
	       if [ -e usr64-backup ]; then
	              echo "[*] Restoring 64-bit Prefix"
		      mv usr64-backup usr
	       fi

	       rm -rf purge-prefix.sh

               echo "[✓] Done, Please Close and Reopen the app"
               sleep 2
               kill -KILL $PPID
EOM
               chmod 755 purge-prefix.sh

               # Kill Current Process and Purge 32-bit prefix
               exec /system/bin/env -i ./purge-prefix.sh
            fi
    esac
}

function termux_arch() {
    HEIGHT=15
    WIDTH=40
    CHOICE_HEIGHT=4
    BACKTITLE="Tecnical Shahinur_Al-Amin"
    TITLE="Termux Prefix Switcher (version 1.3)"
    MENU="Your termux current architecture $(uname -m)"
    OPTIONS=(1 "[Home]")
    CHOICE=$(dialog --clear \
                    --backtitle "$BACKTITLE" \
                    --title "$TITLE" \
                    --menu "$MENU" \
                    $HEIGHT $WIDTH $CHOICE_HEIGHT \
                    "${OPTIONS[@]}" \
                    2>&1 >/dev/tty)
    clear
    case $CHOICE in
            1)
               echo "You chose Termux Prefix Switcher"
               prefix
               ;;
    esac
    exit
}

function prefix() {
    HEIGHT=21
    WIDTH=39
    CHOICE_HEIGHT=4
    BACKTITLE="Technical Shahinur_Al-Amin"
    TITLE="Termux Prefix Switcher (version 1.3)"
    MENU="See [termux-prefix-switcher help] for more information"

    OPTIONS=(1 " *Help*    "
             2 " Switch    "
             3 " Revert    "
             4 " check-arch"
             5 ">  Exit   <")

    CHOICE=$(dialog --clear \
                    --backtitle "$BACKTITLE" \
                    --title "$TITLE" \
                    --menu "$MENU" \
                    $HEIGHT $WIDTH $CHOICE_HEIGHT \
                    "${OPTIONS[@]}" \
                    2>&1 >/dev/tty)

    clear
    case $CHOICE in
            1)
                echo "You chose termux-prefix-switcher help"
                print-help
                ;;
            2)
                print_banner || :
                echo "You chose 32-bit bootstrap installer"
                switch
                ;;
            3)
                print_banner || :
                echo "You chose 64-bit Restore Backup"
                revert
                ;;
            4)
                echo "Check Architecture."
                termux_arch
                ;;
            5)
                print_prefix_banner || :
                echo "You have successfully logged out."
                exit
                ;;
    esac
    exit
}

function print_banner() {
    clear
    printf "${yellow} .#############################################.\n"
    printf "${yellow}.##'       ${light_cyan}Technical Shahinur_Al-Amin${yellow}        '##.\n"
    printf "${yellow}##' ${green}888888888888   .d888b.          db       ${yellow} '##\n"
    printf "${yellow}##  ${green}     88       d88' '88A        d88b      ${yellow}  ##\n"
    printf "${yellow}##  ${green}     88       888   '88       d8''8b     ${yellow}  ##\n"
    printf "${yellow}##  ${green}     88        '88b          d8'  '8b    ${yellow}  ##\n"
    printf "${yellow}##  ${green}     88          '88b.      d8YaaaaY8b   ${yellow}  ##\n"
    printf "${yellow}##  ${green}     88       88.  '88b    d8''''''''8b  ${yellow}  ##\n"
    printf "${yellow}##  ${green}     88       V88' .88b   d8'        '8b ${yellow}  ##\n"
    printf "${yellow}##. ${green}     88        'd888b'   d8'          '8b${yellow} .##\n"
    printf "${yellow}'##.            ${light_cyan}Creator By Shahinur${yellow}          .##'\n"
    printf "${yellow} '############### ${red}PREFIX-SWITCHER${yellow} #############'${reset}\n\n"
}

function print_prefix_banner() {
    clear
    printf "${light_cyan}★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★\n"
    printf "${light_cyan}★                                               ★\n"
    printf "${light_cyan}★   #####.  #####.  #####  #####  ###   #   #   ★\n"
    printf "${light_cyan}★   #    #  #    #  #      #       #     # #    ★\n"
    printf "${light_cyan}★   #####'  #####'  ####   ####    #      #     ★\n"
    printf "${light_cyan}★   #       #   #   #      #       #     # #    ★\n"
    printf "${light_cyan}★   #       #    #  #####  #      ###   #   #   ★\n"
    printf "${light_cyan}★                                               ★\n"
    printf "${light_cyan}★                  [ SWITCHER ]                 ★\n"
    printf "${light_cyan}★_______________________________________________★\n"
    printf "${light_cyan}★________[ ${green}Technical Shahinur_Al-Alamin ${light_cyan}]_______★\n"
    printf "${light_cyan}*************************************************${reset}\n\n"
}

##################################
##              Main            ##

# Add some colours
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
light_cyan='\033[1;96m'
reset='\033[0m'

cd $HOME
print_prefix_banner
get_version
bootstrap_dir
prefix
